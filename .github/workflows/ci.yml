name: CI

on: [pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: Install latest stable 2.x jina version
        run: |
          JINA_VERSION=$(curl -L -s "https://pypi.org/pypi/jina/json" \
            |  jq  -r '.releases | keys | .[]
              | select(contains("dev") | not)
              | select(startswith("2."))' \
            | sort -V | tail -1)
          pip install git+https://github.com/jina-ai/jina.git@v${JINA_VERSION}
      - name: Python requirements
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt ; fi
          if [ -f tests/requirements.txt ]; then
            pip install -r tests/requirements.txt ; fi
      - name: Create Dockerfile, if needed
        run: |
          if [[ ! -f "Dockerfile" ]]; then
            docker run --entrypoint="normalizer" -v "$(pwd):/workspace" \
            jinahub/hubble-normalizer:latest . --jina-version=2
            sudo chown -R $(id -u ${USER}):$(id -g ${USER}) . ; fi
      - name: Run unit tests
        run: pytest -s -v -m "not gpu"
      - id: test_docker
        name: run docker tests
        uses: jina-ai/action-hubble-test-docker@v5
      - run: echo test result ${{ steps.test_docker.outputs.exit_code}}
        shell: bash

  gpu-tests:
    runs-on: [self-hosted, gpu]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build GPU docker image
        run: docker build -t foo -f Dockerfile.gpu .
      - name: Print image size
        run: docker inspect foo | jq '.[0].Size' | numfmt --to=iec --suffix=B
      - name: Start the container
        run: |
          docker run \
            --entrypoint "" \
            --name foo \
            --gpus all \
            -d foo tail -F /dev/null
          echo "DOCKER_EXEC=docker exec foo" >> $GITHUB_ENV
      - name: Run GPU tests in container
        run: |
          $DOCKER_EXEC pip install -r tests/requirements.txt
          $DOCKER_EXEC python -m pytest -s -v -m "gpu and not docker" tests/
      - name: Stop and remove the container
        if: ${{ always() }}
        run: docker stop $(docker ps -a -q) && docker rm foo
